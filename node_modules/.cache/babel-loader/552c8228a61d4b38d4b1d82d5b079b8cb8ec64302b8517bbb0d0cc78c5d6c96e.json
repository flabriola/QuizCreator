{"ast":null,"code":"import React from'react';import'./CreateMenu.css';import openai from'./openai.png';import json from'./json.png';import CircleButton from'../Components/CircleButton';import{Link}from'react-router-dom';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";function CreateMenu(props){function handleHover(event,id){// find which option text should be changed\nvar optionText=document.getElementById(id);// add lower opacity effect \noptionText.style.transition='opacity 0.3s';optionText.style.opacity=event.type==='mouseenter'?'0.3':'1';}return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Link,{id:\"ht-b\",to:\"/how-to\",children:/*#__PURE__*/_jsx(\"div\",{id:\"htd\",children:\"How To Use\"})}),/*#__PURE__*/_jsxs(\"div\",{id:\"createMenuContainer\",children:[/*#__PURE__*/_jsxs(\"div\",{id:\"create-title\",children:[/*#__PURE__*/_jsx(\"h1\",{id:\"title\",children:\"Transform Notes and Presentations into Interactive Quizzes\"}),/*#__PURE__*/_jsx(\"h4\",{id:\"description-cc\",children:\"Choose from using GPT-4, from openai, or JSON formatted questions to create your quiz. Simply upload a body of text or pdf file to get started, or your own questions and answers for an interactive inteface.\"})]}),/*#__PURE__*/_jsxs(\"div\",{id:\"optionsContainer\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"menuOption\",children:[/*#__PURE__*/_jsx(Link,{to:\"/gpt-create\",children:/*#__PURE__*/_jsx(CircleButton,{src:openai,alt:\"openai logo\",onMouseEnter:(e,id)=>handleHover(e,'gpt'),onMouseLeave:(e,id)=>handleHover(e,'gpt')})}),/*#__PURE__*/_jsx(\"p\",{className:\"optionText\",id:\"gpt\",children:\"GPT 4\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"menuOption\",children:[/*#__PURE__*/_jsx(Link,{to:\"/json-create\",children:/*#__PURE__*/_jsx(CircleButton,{src:json,alt:\"json logo\",onMouseEnter:(e,id)=>handleHover(e,'json'),onMouseLeave:(e,id)=>handleHover(e,'json')})}),/*#__PURE__*/_jsx(\"p\",{className:\"optionText\",id:\"json\",children:\"JSON\"})]})]})]})]});}export default CreateMenu;","map":{"version":3,"names":["React","openai","json","CircleButton","Link","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","CreateMenu","props","handleHover","event","id","optionText","document","getElementById","style","transition","opacity","type","children","to","className","src","alt","onMouseEnter","e","onMouseLeave"],"sources":["/Users/joaolabriola/Documents/GitHub/quiz/src/Pages/CreateMenu.js"],"sourcesContent":["import React from 'react';\nimport './CreateMenu.css';\nimport openai from './openai.png';\nimport json from './json.png';\nimport CircleButton from '../Components/CircleButton';\nimport { Link } from 'react-router-dom';\n\nfunction CreateMenu(props) {\n\n    function handleHover(event, id) {\n        // find which option text should be changed\n        var optionText = document.getElementById(id);\n        // add lower opacity effect \n        optionText.style.transition = 'opacity 0.3s';\n        optionText.style.opacity = event.type === 'mouseenter' ? '0.3' : '1';\n    }\n\n    return (\n        <>\n            <Link id='ht-b' to='/how-to'><div id='htd'>How To Use</div></Link>\n            <div id='createMenuContainer'>\n                <div id='create-title'>\n                    <h1 id='title'>Transform Notes and Presentations into Interactive Quizzes</h1>\n                    <h4 id='description-cc'>Choose from using GPT-4, from openai, or JSON formatted questions to create your\n                        quiz. Simply upload a body of text or pdf file to get started, or your own\n                        questions and answers for an interactive inteface.\n                    </h4>\n                </div>\n\n                <div id='optionsContainer'>\n                    <div className=\"menuOption\">\n                        <Link to='/gpt-create'>\n                            <CircleButton\n                                src={openai}\n                                alt=\"openai logo\"\n                                onMouseEnter={(e, id) => handleHover(e, 'gpt')}\n                                onMouseLeave={(e, id) => handleHover(e, 'gpt')}\n                            />\n                        </Link>\n                        <p className=\"optionText\" id='gpt'>GPT 4</p>\n                    </div>\n\n                    <div className=\"menuOption\">\n                        <Link to='/json-create'>\n                            <CircleButton\n                                src={json}\n                                alt=\"json logo\"\n                                onMouseEnter={(e, id) => handleHover(e, 'json')}\n                                onMouseLeave={(e, id) => handleHover(e, 'json')}\n                            />\n                        </Link>\n                        <p className=\"optionText\" id='json'>JSON</p>\n                    </div>\n                </div>\n            </div>\n        </>\n    );\n\n}\n\n\nexport default CreateMenu;"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,MAAO,kBAAkB,CACzB,MAAO,CAAAC,MAAM,KAAM,cAAc,CACjC,MAAO,CAAAC,IAAI,KAAM,YAAY,CAC7B,MAAO,CAAAC,YAAY,KAAM,4BAA4B,CACrD,OAASC,IAAI,KAAQ,kBAAkB,CAAC,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,gCAAAC,QAAA,IAAAC,SAAA,yBAExC,QAAS,CAAAC,UAAUA,CAACC,KAAK,CAAE,CAEvB,QAAS,CAAAC,WAAWA,CAACC,KAAK,CAAEC,EAAE,CAAE,CAC5B;AACA,GAAI,CAAAC,UAAU,CAAGC,QAAQ,CAACC,cAAc,CAACH,EAAE,CAAC,CAC5C;AACAC,UAAU,CAACG,KAAK,CAACC,UAAU,CAAG,cAAc,CAC5CJ,UAAU,CAACG,KAAK,CAACE,OAAO,CAAGP,KAAK,CAACQ,IAAI,GAAK,YAAY,CAAG,KAAK,CAAG,GAAG,CACxE,CAEA,mBACId,KAAA,CAAAE,SAAA,EAAAa,QAAA,eACIjB,IAAA,CAACF,IAAI,EAACW,EAAE,CAAC,MAAM,CAACS,EAAE,CAAC,SAAS,CAAAD,QAAA,cAACjB,IAAA,QAAKS,EAAE,CAAC,KAAK,CAAAQ,QAAA,CAAC,YAAU,CAAK,CAAC,CAAM,CAAC,cAClEf,KAAA,QAAKO,EAAE,CAAC,qBAAqB,CAAAQ,QAAA,eACzBf,KAAA,QAAKO,EAAE,CAAC,cAAc,CAAAQ,QAAA,eAClBjB,IAAA,OAAIS,EAAE,CAAC,OAAO,CAAAQ,QAAA,CAAC,4DAA0D,CAAI,CAAC,cAC9EjB,IAAA,OAAIS,EAAE,CAAC,gBAAgB,CAAAQ,QAAA,CAAC,gNAGxB,CAAI,CAAC,EACJ,CAAC,cAENf,KAAA,QAAKO,EAAE,CAAC,kBAAkB,CAAAQ,QAAA,eACtBf,KAAA,QAAKiB,SAAS,CAAC,YAAY,CAAAF,QAAA,eACvBjB,IAAA,CAACF,IAAI,EAACoB,EAAE,CAAC,aAAa,CAAAD,QAAA,cAClBjB,IAAA,CAACH,YAAY,EACTuB,GAAG,CAAEzB,MAAO,CACZ0B,GAAG,CAAC,aAAa,CACjBC,YAAY,CAAEA,CAACC,CAAC,CAAEd,EAAE,GAAKF,WAAW,CAACgB,CAAC,CAAE,KAAK,CAAE,CAC/CC,YAAY,CAAEA,CAACD,CAAC,CAAEd,EAAE,GAAKF,WAAW,CAACgB,CAAC,CAAE,KAAK,CAAE,CAClD,CAAC,CACA,CAAC,cACPvB,IAAA,MAAGmB,SAAS,CAAC,YAAY,CAACV,EAAE,CAAC,KAAK,CAAAQ,QAAA,CAAC,OAAK,CAAG,CAAC,EAC3C,CAAC,cAENf,KAAA,QAAKiB,SAAS,CAAC,YAAY,CAAAF,QAAA,eACvBjB,IAAA,CAACF,IAAI,EAACoB,EAAE,CAAC,cAAc,CAAAD,QAAA,cACnBjB,IAAA,CAACH,YAAY,EACTuB,GAAG,CAAExB,IAAK,CACVyB,GAAG,CAAC,WAAW,CACfC,YAAY,CAAEA,CAACC,CAAC,CAAEd,EAAE,GAAKF,WAAW,CAACgB,CAAC,CAAE,MAAM,CAAE,CAChDC,YAAY,CAAEA,CAACD,CAAC,CAAEd,EAAE,GAAKF,WAAW,CAACgB,CAAC,CAAE,MAAM,CAAE,CACnD,CAAC,CACA,CAAC,cACPvB,IAAA,MAAGmB,SAAS,CAAC,YAAY,CAACV,EAAE,CAAC,MAAM,CAAAQ,QAAA,CAAC,MAAI,CAAG,CAAC,EAC3C,CAAC,EACL,CAAC,EACL,CAAC,EACR,CAAC,CAGX,CAGA,cAAe,CAAAZ,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}